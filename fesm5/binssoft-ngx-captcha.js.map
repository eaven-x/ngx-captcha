{"version":3,"file":"binssoft-ngx-captcha.js","sources":["ng://@eaven-x/ngx-captcha/lib/ngx-captcha.service.ts","ng://@eaven-x/ngx-captcha/lib/ngx-captcha.component.ts","ng://@eaven-x/ngx-captcha/lib/ngx-captcha.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxCaptchaService {\n\n  captchSource = new BehaviorSubject(null);\n  captchStatus = this.captchSource.asObservable(); \n  constructor() { }\n\n  setCaptchaStatus(code) {\n    this.captchSource.next(code);\n  }\n}\n","import {\n  Component,\n  OnChanges,\n  Input,\n} from \"@angular/core\";\nimport {NgxCaptchaService} from './ngx-captcha.service'\n@Component({\n  selector: 'ngx-captcha',\n  templateUrl:'./ngx-captcha.component.html',\n  styleUrls: ['./ngx-captcha.component.scss']\n})\nexport class NgxCaptchaComponent implements OnChanges {\n\n  @Input(\"config\") config: any = {};\n  captch_input:any = null;\n  code: any = null;\n  resultCode:any = null;\n  constructor(private captchService:NgxCaptchaService){}\n  ngOnChanges() {\n    if (this.config) {\n      if (!this.config.font || !this.config.font.size) {\n        this.config[\"font\"][\"size\"] = \"40px\";\n      }\n      if (!this.config.font || !this.config.font.family) {\n        this.config[\"font\"][\"family\"] = \"Arial\";\n      }\n      if (!this.config.strokeColor) {\n        this.config[\"strokeColor\"] = \"#f20c6c\";\n      }\n      if (!this.config.length) {\n        this.config[\"length\"] = 6;\n      }\n      if (!this.config.cssClass) {\n        this.config[\"cssClass\"] = '';\n      }\n\n      if (!this.config.type) {\n        this.config[\"type\"] = 1;\n      }\n      \n      if (!this.config.back || !this.config.back.stroke) {\n        this.config[\"back\"][\"stroke\"] = \"\";\n      }\n      if (!this.config.back || !this.config.back.solid) {\n        this.config[\"back\"][\"solid\"] = \"#f2efd2\";\n      }\n\n      this.createCaptcha();\n    }\n  }\n  createCaptcha() {\n\n    switch(this.config.type) {\n      case 1:\n  \n      let char =\n      Math.random()\n        .toString(24)\n        .substring(2, this.config.length) +\n      Math.random()\n        .toString(24)\n        .substring(2, 4);\n      this.code = this.resultCode = char.toUpperCase();\n      break;\n      case 2:\n      let num1 = Math.floor(Math.random() * 99);\n      let num2 = Math.floor(Math.random() * 9);\n      let operators = ['+','-'];\n      let operator = operators[(Math.floor(Math.random() * operators.length))];\n      this.code =  num1+operator+num2+'=?';\n      this.resultCode = (operator == '+')? (num1+num2):(num1-num2);\n      break;\n    }\n    \n\n    setTimeout(() => {\n      let captcahCanvas: any = document.getElementById(\"captcahCanvas\");\n      var ctx = captcahCanvas.getContext(\"2d\");\n      ctx.fillStyle = this.config.back.solid;\n      ctx.fillRect(0, 0, captcahCanvas.width, captcahCanvas.height);\n\n      ctx.beginPath();\n\n      captcahCanvas.style.letterSpacing = 15 + \"px\";\n      ctx.font = this.config.font.size + \" \" + this.config.font.family;\n      ctx.fillStyle = this.config.font.color;\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(this.code, 40, 50);\n      if (this.config.back.stroke) {\n        ctx.strokeStyle = this.config.back.stroke;\n        for (var i = 0; i < 150; i++) {\n          ctx.moveTo(Math.random() * 300, Math.random() * 300);\n          ctx.lineTo(Math.random() * 300, Math.random() * 300);\n        }\n        ctx.stroke();\n      }\n       \n      // this.captchaCode.emit(char);\n    }, 100);\n  }\n\n  playCaptcha() {\n    var msg = new SpeechSynthesisUtterance(this.code.split('').join(' '));\n    msg.pitch = 0.1;\n    window.speechSynthesis.speak(msg);\n  }\n\n  checkCaptcha() {\n    if (this.captch_input != this.resultCode) {\n      this.captchService.setCaptchaStatus(false);\n      \n    } else  {\n      this.captchService.setCaptchaStatus(true);\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgxCaptchaComponent } from './ngx-captcha.component';\nimport {NgxCaptchaService} from './ngx-captcha.service';\n\n\n@NgModule({\n  declarations: [NgxCaptchaComponent],\n  imports: [\n    FormsModule\n  ],\n  exports: [NgxCaptchaComponent]\n})\nexport class NgxCaptchaModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxCaptchaModule,\n      providers: [ NgxCaptchaService ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
