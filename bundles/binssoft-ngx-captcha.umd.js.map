{"version":3,"file":"binssoft-ngx-captcha.umd.js","sources":["ng://@eaven-x/ngx-captcha/lib/ngx-captcha.service.ts","ng://@eaven-x/ngx-captcha/lib/ngx-captcha.component.ts","ng://@eaven-x/ngx-captcha/lib/ngx-captcha.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxCaptchaService {\n\n  captchSource = new BehaviorSubject(null);\n  captchStatus = this.captchSource.asObservable(); \n  constructor() { }\n\n  setCaptchaStatus(code) {\n    this.captchSource.next(code);\n  }\n}\n","import {\n  Component,\n  OnChanges,\n  Input,\n} from \"@angular/core\";\nimport {NgxCaptchaService} from './ngx-captcha.service'\n@Component({\n  selector: 'ngx-captcha',\n  templateUrl:'./ngx-captcha.component.html',\n  styleUrls: ['./ngx-captcha.component.scss']\n})\nexport class NgxCaptchaComponent implements OnChanges {\n\n  @Input(\"config\") config: any = {};\n  captch_input:any = null;\n  code: any = null;\n  resultCode:any = null;\n  constructor(private captchService:NgxCaptchaService){}\n  ngOnChanges() {\n    if (this.config) {\n      if (!this.config.font || !this.config.font.size) {\n        this.config[\"font\"][\"size\"] = \"40px\";\n      }\n      if (!this.config.font || !this.config.font.family) {\n        this.config[\"font\"][\"family\"] = \"Arial\";\n      }\n      if (!this.config.strokeColor) {\n        this.config[\"strokeColor\"] = \"#f20c6c\";\n      }\n      if (!this.config.length) {\n        this.config[\"length\"] = 6;\n      }\n      if (!this.config.cssClass) {\n        this.config[\"cssClass\"] = '';\n      }\n\n      if (!this.config.type) {\n        this.config[\"type\"] = 1;\n      }\n      \n      if (!this.config.back || !this.config.back.stroke) {\n        this.config[\"back\"][\"stroke\"] = \"\";\n      }\n      if (!this.config.back || !this.config.back.solid) {\n        this.config[\"back\"][\"solid\"] = \"#f2efd2\";\n      }\n\n      this.createCaptcha();\n    }\n  }\n  createCaptcha() {\n\n    switch(this.config.type) {\n      case 1:\n  \n      let char =\n      Math.random()\n        .toString(24)\n        .substring(2, this.config.length) +\n      Math.random()\n        .toString(24)\n        .substring(2, 4);\n      this.code = this.resultCode = char.toUpperCase();\n      break;\n      case 2:\n      let num1 = Math.floor(Math.random() * 99);\n      let num2 = Math.floor(Math.random() * 9);\n      let operators = ['+','-'];\n      let operator = operators[(Math.floor(Math.random() * operators.length))];\n      this.code =  num1+operator+num2+'=?';\n      this.resultCode = (operator == '+')? (num1+num2):(num1-num2);\n      break;\n    }\n    \n\n    setTimeout(() => {\n      let captcahCanvas: any = document.getElementById(\"captcahCanvas\");\n      var ctx = captcahCanvas.getContext(\"2d\");\n      ctx.fillStyle = this.config.back.solid;\n      ctx.fillRect(0, 0, captcahCanvas.width, captcahCanvas.height);\n\n      ctx.beginPath();\n\n      captcahCanvas.style.letterSpacing = 15 + \"px\";\n      ctx.font = this.config.font.size + \" \" + this.config.font.family;\n      ctx.fillStyle = this.config.font.color;\n      ctx.textBaseline = \"middle\";\n      ctx.fillText(this.code, 40, 50);\n      if (this.config.back.stroke) {\n        ctx.strokeStyle = this.config.back.stroke;\n        for (var i = 0; i < 150; i++) {\n          ctx.moveTo(Math.random() * 300, Math.random() * 300);\n          ctx.lineTo(Math.random() * 300, Math.random() * 300);\n        }\n        ctx.stroke();\n      }\n       \n      // this.captchaCode.emit(char);\n    }, 100);\n  }\n\n  playCaptcha() {\n    var msg = new SpeechSynthesisUtterance(this.code.split('').join(' '));\n    msg.pitch = 0.1;\n    window.speechSynthesis.speak(msg);\n  }\n\n  checkCaptcha() {\n    if (this.captch_input != this.resultCode) {\n      this.captchService.setCaptchaStatus(false);\n      \n    } else  {\n      this.captchService.setCaptchaStatus(true);\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { NgxCaptchaComponent } from './ngx-captcha.component';\nimport {NgxCaptchaService} from './ngx-captcha.service';\n\n\n@NgModule({\n  declarations: [NgxCaptchaComponent],\n  imports: [\n    FormsModule\n  ],\n  exports: [NgxCaptchaComponent]\n})\nexport class NgxCaptchaModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxCaptchaModule,\n      providers: [ NgxCaptchaService ]\n    };\n  }\n}\n"],"names":["BehaviorSubject","Injectable","Component","Input","NgModule","FormsModule"],"mappings":";;;;;;;;;;;AAAA;QASE;YAFA,iBAAY,GAAG,IAAIA,oBAAe,CAAC,IAAI,CAAC,CAAC;YACzC,iBAAY,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;SAC/B;;;;;QAEjB,4CAAgB;;;;QAAhB,UAAiB,IAAI;YACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC9B;;oBAXFC,eAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;gCAJD;KAEA,IAYC;;;QAPC,yCAAyC;;QACzC,yCAAgD;;;;;;;;ACRlD;QAiBE,6BAAoB,aAA+B;YAA/B,kBAAa,GAAb,aAAa,CAAkB;YAJlC,WAAM,GAAQ,EAAE,CAAC;YAClC,iBAAY,GAAO,IAAI,CAAC;YACxB,SAAI,GAAQ,IAAI,CAAC;YACjB,eAAU,GAAO,IAAI,CAAC;SACgC;;;;QACtD,yCAAW;;;QAAX;YACE,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;oBAC/C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;iBACtC;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;oBACjD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC;iBACzC;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;oBAC5B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,SAAS,CAAC;iBACxC;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;oBACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;iBAC3B;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;oBACzB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;iBAC9B;gBAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;oBACrB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iBACzB;gBAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;oBACjD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;iBACpC;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE;oBAChD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC;iBAC1C;gBAED,IAAI,CAAC,aAAa,EAAE,CAAC;aACtB;SACF;;;;QACD,2CAAa;;;QAAb;YAAA,iBAiDC;YA/CC,QAAO,IAAI,CAAC,MAAM,CAAC,IAAI;gBACrB,KAAK,CAAC;;wBAEF,IAAI,GACR,IAAI,CAAC,MAAM,EAAE;yBACV,QAAQ,CAAC,EAAE,CAAC;yBACZ,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;wBACnC,IAAI,CAAC,MAAM,EAAE;6BACV,QAAQ,CAAC,EAAE,CAAC;6BACZ,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;oBAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;oBACjD,MAAM;gBACN,KAAK,CAAC;;wBACF,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC;;wBACrC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;;wBACpC,SAAS,GAAG,CAAC,GAAG,EAAC,GAAG,CAAC;;wBACrB,QAAQ,GAAG,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,SAAS,CAAC,MAAM,CAAC,EAAE;oBACxE,IAAI,CAAC,IAAI,GAAI,IAAI,GAAC,QAAQ,GAAC,IAAI,GAAC,IAAI,CAAC;oBACrC,IAAI,CAAC,UAAU,GAAG,CAAC,QAAQ,IAAI,GAAG,KAAI,IAAI,GAAC,IAAI,KAAG,IAAI,GAAC,IAAI,CAAC,CAAC;oBAC7D,MAAM;aACP;YAGD,UAAU;;;YAAC;;oBACL,aAAa,GAAQ,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC;;oBAC7D,GAAG,GAAG,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC;gBACxC,GAAG,CAAC,SAAS,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBACvC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;gBAE9D,GAAG,CAAC,SAAS,EAAE,CAAC;gBAEhB,aAAa,CAAC,KAAK,CAAC,aAAa,GAAG,EAAE,GAAG,IAAI,CAAC;gBAC9C,GAAG,CAAC,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBACjE,GAAG,CAAC,SAAS,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;gBACvC,GAAG,CAAC,YAAY,GAAG,QAAQ,CAAC;gBAC5B,GAAG,CAAC,QAAQ,CAAC,KAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;gBAChC,IAAI,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;oBAC3B,GAAG,CAAC,WAAW,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;oBAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;wBAC5B,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;wBACrD,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;qBACtD;oBACD,GAAG,CAAC,MAAM,EAAE,CAAC;iBACd;;aAGF,GAAE,GAAG,CAAC,CAAC;SACT;;;;QAED,yCAAW;;;QAAX;;gBACM,GAAG,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrE,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC;YAChB,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACnC;;;;QAED,0CAAY;;;QAAZ;YACE,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,EAAE;gBACxC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;aAE5C;iBAAO;gBACN,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;aAC3C;SACF;;oBA5GFC,cAAS,SAAC;wBACT,QAAQ,EAAE,aAAa;wBACvB,imBAA0C;;qBAE3C;;;;oBALO,iBAAiB;;;6BAQtBC,UAAK,SAAC,QAAQ;;QAsGjB,0BAAC;KA7GD,IA6GC;;;QAtGC,qCAAkC;;QAClC,2CAAwB;;QACxB,mCAAiB;;QACjB,yCAAsB;;;;;QACV,4CAAuC;;;;;;;;ACjBrD;QAMA;SAcC;;;;QANQ,wBAAO;;;QAAd;YACE,OAAO;gBACL,QAAQ,EAAE,gBAAgB;gBAC1B,SAAS,EAAE,CAAE,iBAAiB,CAAE;aACjC,CAAC;SACH;;oBAbFC,aAAQ,SAAC;wBACR,YAAY,EAAE,CAAC,mBAAmB,CAAC;wBACnC,OAAO,EAAE;4BACPC,iBAAW;yBACZ;wBACD,OAAO,EAAE,CAAC,mBAAmB,CAAC;qBAC/B;;QAQD,uBAAC;KAdD;;;;;;;;;;;;;;"}
